Validando o Funcionamento, Ajustando o
Layout e Refinamentos Finais (.NET MVC)
Olá! Chegamos a uma etapa muito importante: testar tudo o que construímos e garantir
que o site de vendas de comidas esteja funcionando como esperado e com a aparência
desejada, baseada no design do Figma. Esta fase envolve testes funcionais, validação do
layout, testes de responsividade e os ajustes finais.



1. Checklist de Testes Funcionais
Percorra cada funcionalidade do site, agindo como um usuário final. Anote qualquer
comportamento inesperado ou erro.

1.1. Ambiente e Configuração Inicial:
[ ] O projeto .NET MVC é executado sem erros?
[ ] A conexão com o banco de dados MySQL local está funcionando?
[ ] As tabelas do banco de dados ( Usuarios , Produtos , Agendamentos ,
ItensPedido ) foram criadas corretamente pelas migrations?
[ ] Você conseguiu popular a tabela Produtos com alguns itens para teste?
1.2. Autenticação com Google:
[ ] O botão/link "Login com Google" aparece para usuários não autenticados?
[ ] Ao clicar em "Login com Google", o usuário é redirecionado para a página
de autenticação do Google?
[ ] Após o login bem-sucedido no Google e consentimento, o usuário é
redirecionado de volta para o site?
[ ] As informações do usuário (nome, e-mail) são capturadas e o usuário é
logado no site (ex: nome aparece no header)?
[ ] O registro do novo usuário (se for o primeiro login) está ocorrendo
corretamente na tabela Usuarios do seu banco de dados?
[ ] O link/botão "Logout" aparece para usuários autenticados?
[ ] Ao clicar em "Logout", o usuário é deslogado do site?
[ ] Tentativas de acesso a páginas protegidas (ex: Agendamento) por usuários
não logados redirecionam para a página de Login?

1.3. Navegação e Layout Base:
[ ] O _Layout.cshtml está sendo aplicado a todas as páginas?
[ ] O cabeçalho (Top App Bar) está visível e com o nome da loja?
[ ] O botão de menu (três listras) está visível, especialmente em telas
menores?
[ ] Ao clicar no botão de menu, o menu lateral (Nav Drawer) abre e fecha
corretamente?
[ ] Os links no menu lateral (Início, Cardápio, Agendar Pedido, Meus
Agendamentos - se logado) estão funcionando e levando às páginas corretas?
[ ] O rodapé está visível e com as informações corretas?
1.4. Página Inicial:
[ ] O conteúdo descritivo sobre a loja é exibido corretamente?
[ ] Os links/botões para "Ver Cardápio" e "Agendar Pedido" estão
funcionando?
1.5. Página de Cardápio:
[ ] Os produtos inseridos no banco de dados são listados corretamente
(nome, descrição, preço, imagem, categoria)?
[ ] As imagens dos produtos são exibidas? (Se não houver imagem, um
placeholder é mostrado?)
[ ] A formatação dos preços está correta?
[ ] (Se implementado) O link/botão "Ver Detalhes" para cada produto
funciona e leva a uma página com mais informações?
[ ] A paginação ou scroll infinito funciona, caso haja muitos produtos
(funcionalidade não detalhada, mas a se considerar para o futuro)?
1.6. Página de Agendamento de Pedidos (Criar Agendamento):
[ ] A página só é acessível por usuários logados?
[ ] A lista de produtos disponíveis para seleção é carregada do banco de
dados?
[ ] O usuário consegue selecionar quantidades para diferentes produtos?
[ ] O resumo do pedido (itens selecionados e valor total) é atualizado
dinamicamente conforme o usuário altera as quantidades (via JavaScript)?
[ ] O campo de data/hora para agendamento funciona e permite selecionar
uma data/hora futura?
[ ] O campo de observações funciona?
[ ] As validações de formulário (campos obrigatórios, formato de data, etc.)
estão funcionando e exibindo mensagens de erro claras?
[ ] Ao submeter o formulário com dados válidos, o agendamento é salvo
corretamente nas tabelas Agendamentos e ItensPedido do banco de
dados?
Verifique se UsuarioId , DataHoraAgendamento , Status , ValorTotal ,
Observacoes estão corretos em Agendamentos .
Verifique se AgendamentoId , ProdutoId , Quantidade , PrecoUnitario
estão corretos em ItensPedido .
[ ] Após o sucesso, o usuário é redirecionado para a página "Meus
Agendamentos" com uma mensagem de sucesso?
[ ] Em caso de falha na submissão (ex: erro de validação no backend), o
formulário é reexibido com os dados preenchidos e mensagens de erro?
1.7. Página "Meus Agendamentos":
[ ] A página só é acessível por usuários logados?
[ ] Os agendamentos feitos pelo usuário logado são listados corretamente?
[ ] As informações exibidas para cada agendamento (ID, data/hora, valor total,
status, itens do pedido com nome do produto e quantidade) estão corretas?
[ ] Se não houver agendamentos, uma mensagem apropriada é exibida?
[ ] (Se implementado) Funcionalidades como "Detalhes do Agendamento" ou
"Cancelar Agendamento" estão funcionando?


2. Validação do Layout (Comparação com Figma)
Com o Figma aberto em uma tela e seu site em outra, compare cada página e
componente.
2.1. Cores: As cores de fundo, texto, botões, links e outros elementos
correspondem às especificadas no Figma?
2.2. Tipografia: As fontes, tamanhos de fonte, pesos (negrito, normal) e
espaçamento entre letras/linhas estão consistentes com o design?
2.3. Espaçamentos e Alinhamento: Verifique margens, paddings, e o alinhamento
dos elementos. Os componentes estão posicionados corretamente em relação uns
aos outros e à página?
2.4. Ícones: Os ícones corretos estão sendo usados e estão com o tamanho e cor
adequados?
2.5. Componentes Específicos:
Botões: Estilo, tamanho, cantos arredondados, sombras.
Cards (para produtos): Sombras, bordas, organização interna dos elementos
(imagem, título, texto, preço).
Campos de Formulário (Text Fields): Aparência, labels, dicas (placeholders).
Menu Lateral (Nav Drawer): Largura, estilo dos itens, animação de abertura/
fechamento.
Barra Superior (Top App Bar): Altura, sombras, posicionamento do título e
ícones.
Diálogos/Modais (se houver): Aparência e comportamento.
2.6. Consistência Geral: O visual é consistente em todas as páginas do site?


3. Testes de Responsividade
Seu site precisa ter uma boa aparência e ser funcional em diferentes tamanhos de tela.
3.1. Use as Ferramentas de Desenvolvedor do Navegador:
Clique com o botão direito em qualquer lugar da página e selecione
"Inspecionar" ou "Inspecionar Elemento".
Procure por um ícone que se parece com um celular/tablet (geralmente
chamado de "Toggle device toolbar" ou similar).
Isso permitirá que você simule diferentes tamanhos de tela (ex: iPhone, iPad,
Android) ou defina dimensões personalizadas.
3.2. O que Verificar:
Layout Quebrado: Elementos se sobrepõem, saem da tela ou ficam
desalinhados?
Legibilidade: O texto ainda é fácil de ler? Os tamanhos de fonte se ajustam
adequadamente?
Tamanho dos Alvos de Clique: Botões e links ainda são fáceis de clicar em
telas menores (touchscreens)?
Menu de Navegação: O menu lateral funciona bem em telas mobile? O botão
de toggle está acessível?
Imagens: As imagens redimensionam corretamente sem distorção ou perda
excessiva de qualidade?
Tabelas e Listas: Dados em tabelas ou listas longas ainda são apresentáveis
ou precisam de um layout diferente para mobile (ex: cards em vez de linhas
de tabela)?
Orientação: Teste em modo retrato e paisagem nos dispositivos móveis
simulados.
3.3. Breakpoints Comuns para Teste:
Mobile Pequeno: ~320px de largura
Mobile Médio/Grande: 375px - 425px de largura
Tablet: ~768px de largura
Desktop Pequeno: ~1024px de largura
Desktop Médio/Grande: 1280px+ de largura


4. Dicas para Ajustes (CSS e JavaScript)
Se você encontrar problemas de layout ou funcionalidade, aqui estão algumas dicas:
CSS:
Inspecionar Elemento: Use as ferramentas de desenvolvedor para selecionar
o elemento problemático e ver quais estilos CSS estão sendo aplicados a ele.
Você pode experimentar alterações de CSS diretamente no navegador para
ver o efeito em tempo real.
Especificidade: Se seu CSS não está sendo aplicado, pode ser um problema
de especificidade (outra regra CSS mais específica está sobrescrevendo a
sua). Tente tornar seu seletor mais específico ou use !important (com
cautela, como último recurso).
Media Queries: Para responsividade, use media queries no seu site.css para
aplicar estilos diferentes com base na largura da tela. css /* Exemplo de
Media Query */ @media (max-width: 768px) { /* Estilos para telas de até
768px de largura */ .meu-elemento { font-size: 14px; } }
Flexbox e Grid: Para layouts complexos, Flexbox e CSS Grid são ferramentas
poderosas. Se você usou Bootstrap, ele já faz uso extensivo de Flexbox.
Limpar Cache: Às vezes, o navegador guarda versões antigas do seu CSS.
Limpe o cache do navegador (Ctrl+Shift+R ou Cmd+Shift+R) para garantir que
você está vendo as últimas alterações.
JavaScript:
Console do Navegador: Verifique o console (nas ferramentas de
desenvolvedor) por erros de JavaScript. Eles geralmente indicam onde o
problema está.
Depurador (Debugger): Use a aba "Sources" (ou similar) nas ferramentas de
desenvolvedor para adicionar breakpoints ao seu código JavaScript e
inspecionar variáveis em tempo de execução.
Lógica: Revise a lógica do seu código JS, especialmente para interações
dinâmicas como o resumo do pedido ou o toggle do menu.


5. Refinamento Geral
Textos e Mensagens: Revise todos os textos do site: títulos, descrições, mensagens
de erro, mensagens de sucesso. Eles estão claros, corretos ortograficamente e
gramaticalmente?
Usabilidade: Navegue pelo site como se fosse um novo usuário. O fluxo é intuitivo?
Há algo confuso ou difícil de usar?



Performance (Básica): As páginas carregam em um tempo razoável? Imagens
muito grandes podem ser otimizadas (comprimidas) para melhorar o tempo de
carregamento.
Links Quebrados: Verifique se todos os links internos e externos estão
funcionando.



Esta etapa de validação e ajuste é iterativa. Você pode encontrar um problema, corrigi-lo
e depois testar novamente. Seja paciente e metódico. Um site bem testado e polido
oferece uma experiência muito melhor para seus usuários!
Depois de se sentir confiante com os testes e ajustes, o próximo passo será preparar a
documentação final e o cronograma para você, e então pensar na publicação (deploy)
no Azure.
